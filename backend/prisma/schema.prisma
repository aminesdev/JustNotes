generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                String         @id @default(cuid())
  password          String
  role              UserRole       @default(USER)
  createdAt         DateTime       @default(now())
  email             String         @unique
  isVerified        Boolean        @default(false)
  verificationToken String?
  categories        Category[]
  notes             Note[]
  refreshTokens     RefreshToken[]

  @@map("users")
}

model Category {
  id          String   @id @default(cuid())
  name        String
  description String?
  color       String?  @default("#6B73FF")
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  notes       Note[]

  @@unique([userId, name])
  @@map("categories")
}

model Note {
  id         String    @id @default(cuid())
  title      String
  content    String
  isPinned   Boolean   @default(false)
  tags       String[]
  userId     String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  categoryId String?
  category   Category? @relation(fields: [categoryId], references: [id])
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, categoryId])
  @@index([userId, isPinned])
  @@index([userId, createdAt])
  @@map("notes")
}

model RefreshToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("refresh_tokens")
}

enum UserRole {
  ADMIN
  USER
}
